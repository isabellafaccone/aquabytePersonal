name: mft-pg

# Note: This MLProject is intended to run in a variety of dockerized
# environments.  See root README.md for details, or use the
# build_docker_envs{_x86,_jetson} to build the appropriate targets.

entry_points:
  pull_s3_data:
    command: "echo TODO"
  
  build_docker_envs_x86:
    command: >
      cd detection/inference/docker_x86 && \
        docker build -t mft-pg-inference-x86 . && \
      cd - && \
      cd detection/training/darknet/docker && \
        docker build -t mft-pg-darknet-train . && \
      cd -
  
  build_docker_envs_arm:
    command: >
      cd detection/inference/docker_jetson && \
        docker build -t mft-pg-inference-jetson .

  train_yolo_darknet:
    parameters:
      scratch_dir: {type: string, default: /opt/mft-pg/scratch}
      dataset_name: {type: string, default: gopro1_fish_train}
      input_width: {type: int, default: 416}
      input_height: {type: int, default: 416}
      batch_size: {type: int, default: 4}
      max_batches: {type: int, default: 300000}
      finetune_from_imagenet: {type: bool, default: True}
      gpu_id: {type: int, default: -1}
    command: >
      python3 detection/training/darknet/train.py \
        --scratch_dir {scratch_dir} \
        --dataset_name {dataset_name} \
        --width {input_width} \
        --height {input_height} \
        --batch_size {batch_size} \
        --max_batches {max_batches} \
        --finetune_from_imagenet {finetune_from_imagenet} \
        --gpu_id {gpu_id}

  create_detection_fixture:
    parameters:
      use_model_run_id: {type: string, default: ''}
      use_model_artifact_dir: {type: string, default: ''}
      detect_on_dataset: {type: string, default: gopro1_fish_test}
      gpu_id: {type: int, default: -1}
    command: >
      python3 detection/inference/create_detection_fixture.py \
        --use_model_run_id {use_model_run_id} \
        --use_model_artifact_dir {use_model_artifact_dir} \
        --detect_on_dataset {detect_on_dataset} \
        --gpu_id {gpu_id}

  create_trt_engine:
    parameters:
      use_model_run_id: {type: string, default: ''}
      use_model_artifact_dir: {type: string, default: ''}
    command: >
      python3 detection/inference/create_trt_engine.py \
        --use_model_run_id {use_model_run_id} \
        --use_model_artifact_dir {use_model_artifact_dir}

  train_yolo_zoo:
    parameters:
      scratch_dir: {type: string, default: /opt/mft-pg/scratch}
      train_dataset_name: {type: string, default: gopro1_fish_train}
      test_dataset_name: {type: string, default: gopro1_fish_test}
      min_width: {type: int, default: 160}
      max_width: {type: int, default: 1024}
      width_step: {type: int, default: 32}
      batch_size: {type: int, default: 4}
      max_batches: {type: int, default: 10000}
      finetune_from_imagenet: {type: bool, default: True}
    command: >
      python3 detection/training/darknet/train_yolo_zoo.py \
        --scratch_dir {scratch_dir} \
        --train_dataset_name {train_dataset_name} \
        --test_dataset_name {test_dataset_name} \
        --min_width {min_width} \
        --max_width {max_width} \
        --width_step {width_step} \
        --batch_size {batch_size} \
        --max_batches {max_batches} \
        --finetune_from_imagenet {finetune_from_imagenet}

